<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VDPHwRIAHQQAa3PHeG9U8w6n43eimjUOngDoIABYo3Pj96OaeTgVfxBnRTVnHDwB0EEAsGY/EV+Lavbh
        RNrP+v9stDedqmaLMQiADgKAtbtnfDSq+Yf9WjD+enxDVPPEWARABwHALrhxPC3eFdXfA2g/4vd7cduo
        ZogxCYAOAoBd883xjPjfUf2dYHdcEe+L/xh3i2peGJsA6CAA2GXfEi0GXhlviHfGRfFhVuf/xmvj2fHo
        +HtxrajmgnkIgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAO
        AgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZ
        CYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4C
        AIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJgA4CAIBZCYAOAgCAWQmADgIAgFkJ
        gA4CAIBZCYAOaw+AG8a943Hxa/F8Vud58bPxI/HwuH1UswCsjwDosKYAuG78cPx6vCk+GdVjZv3eGT8T
        t4tqVoB1EAAd1hAA14jHxyeieozstj+Pn47bRjU/wLwEQIfZA+Bh8d6oHhvs9xtxdlSzBMxHAHSYNQDu
        Ff8zqscEJ/K/4lZRzRUwFwHQYcYAeGZUjwVO1ufiu6KaL2AeAqDDbAHQvtO7ehxwqq6MX4ozo5o1YHwC
        oMNMAfCIuCKqxwGn63VxVlQzB4xNAHSYJQAeEF+N6jFAr5+Kau6AsQmADjMEQDsXR3X/sAmXxHlRzR8w
        LgHQYfQAuEl8Oqp7h016a/h+AJiLAOgwegD8XFT3Ddvw5KjmEBiTAOgwcgC0F2zx6n4s6SvhvQRgHgKg
        w8gB8Jio7hm26Y1RzSMwHgHQYeQAeHtU9wzb1H7U9AZRzSQwFgHQYdQAaG/hW90vLOGhUc0lMBYB0GHU
        AHhVVPcLS3h+VHMJjEUAdBgxAM6Iy6K6X1jCu6OaTWAsAqDDiAFwo6juFZbS3ifgG6KaT2AcAqDDiAHQ
        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
</value>
  </data>
</root>